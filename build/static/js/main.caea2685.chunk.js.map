{"version":3,"sources":["MemberProfile.js","httpRequests.js","Members.js","MemberRepos.js","App.js","serviceWorker.js","index.js"],"names":["MemberProfile","onClose","login","useState","name","setName","company","setCompany","blog","setBlog","useEffect","fetch","then","response","status","Promise","reject","json","fetchMember","createPortal","className","tabIndex","style","display","type","data-dismiss","aria-label","onClick","aria-hidden","document","getElementById","Members","members","showMemberModal","showReposModal","follow","unfollow","favorites","map","member","key","id","src","avatar_url","find","datamem","console","log","MemberRepos","repos","setRepos","fetchRepos","repo","href","html_url","target","description","App","setMembers","isMemberConfirmationShown","setIsMemberConfirmationShown","isReposConfimationShown","setIsReposConfirmationShown","currLogin","setCurrLogin","setFavorites","memberset","obj","method","body","JSON","stringify","headers","favorite","concat","removeFavorite","filtered_favorites","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.caea2685.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { createPortal } from \"react-dom\"\nimport { fetchMember } from \"./httpRequests\"\n\nexport default function MemberProfile({ onClose, login }){\n    const [name, setName] = useState(\"\");\n    const [company, setCompany] = useState(\"\");\n    const [blog, setBlog] = useState(\"\");\n    useEffect(() => {\n        fetchMember(login).then((response) => {\n            setName(response.name);\n            setCompany(response.company);\n            setBlog(response.blog);\n        })\n    }, []);\n    return createPortal(\n        <>\n          <div className=\"modal-backdrop show\"></div>\n          <div className=\"modal\" tabIndex=\"-1\" style={{ display: \"block\" }}>\n            <div className=\"modal-dialog\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                <h5 className=\"modal-title\">{login}</h5>\n                  <button\n                    type=\"button\"\n                    className=\"close\"\n                    data-dismiss=\"modal\"\n                    aria-label=\"Close\"\n                    onClick={onClose}\n                  >\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  <ul>\n                      <li>{name}</li>\n                      <li>{company}</li>\n                      <li>{blog}</li>\n                  </ul>\n                </div>\n                <div className=\"modal-footer\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-secondary\"\n                    data-dismiss=\"modal\"\n                    onClick={onClose}\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </>,\n        document.getElementById(\"modal-container\")\n      );\n}","export function fetchMembers(){\n    return fetch(\"https://api.github.com/orgs/emberjs/members\").then((response) => {\n        if(response.status >= 400){\n            return Promise.reject(\"There was a problem with loading the members.\")\n        }\n        return response.json();\n    });\n}\n\nexport function fetchMember(login){\n    return fetch(`https://api.github.com/users/${login}`).then((response) => {\n        if(response.status >= 400){\n            return Promise.reject(\"There was a problem with loading the specified member.\")\n        }\n        return response.json();\n    });\n}\n\nexport function fetchRepos(login){\n    \n    return fetch(`https://api.github.com/users/${login}/repos`).then((response) => {\n        if(response.status >= 400){\n            return Promise.reject(\"There was a problem with loading the specified member.\")\n        }\n        return response.json();\n    });\n\n}\n\nexport function fetchFavorites(){\n    return fetch(\"/api/members\").then((response) => {\n        if(response.status >= 400){\n            return Promise.reject(\"There was a problem with loading the members.\")\n        }\n        return response.json();\n    });\n}\n\nexport function addFavorite(obj){\n    return fetch(\"/api/members\", {\n        method: \"POST\",\n        body: JSON.stringify(obj),\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    }).then((response) => {\n        return response.json();\n    });\n}\n\nexport function removeFavorite(id){\n    return fetch(`/api/members/${id}`, {\n        method: \"DELETE\",\n    });\n}","import React, { useState, useEffect } from 'react'\nimport { fetchFavorites } from './httpRequests'\n\nexport default function Members({ members, showMemberModal, showReposModal, follow, unfollow, favorites }){\n    return (members.map((member) => {\n        return( \n        <div key={member.id} id=\"div-container\">\n              <p onClick={() => {\n                showMemberModal(member.login);\n                }}>{member.login}</p>\n              <img src={member.avatar_url} onClick={() => {\n                showMemberModal(member.login);\n                }}/>\n                <br></br>\n                <button onClick={() => {\n                    showReposModal(member.login);\n                }}>\n                    Repos\n                </button>\n                {favorites && favorites.find((datamem) => {\n                    console.log(datamem.id === member.id)\n                    return datamem.id === member.id\n                }) ? (<button onClick={() => {unfollow(member.id)}}>\n                        Unfollow\n                    </button>\n                ) : (\n                    <button onClick={() => {follow(member.login, member.id)}}>\n                                Follow\n                            </button>\n                )}\n        </div>);\n    }));\n}","import React, { useEffect, useState } from \"react\"\nimport { createPortal } from \"react-dom\"\nimport { fetchRepos } from \"./httpRequests\"\n\nexport default function MemberRepos({ onClose, login }){\n    const [repos, setRepos] = useState([]);\n    useEffect(() => {\n        fetchRepos(login).then((response) => {\n            setRepos(response);\n        })\n    }, []);\n    return createPortal(\n        <>\n          <div className=\"modal-backdrop show\"></div>\n          <div className=\"modal\" tabIndex=\"-1\" style={{ display: \"block\" }}>\n            <div className=\"modal-dialog\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                <h5 className=\"modal-title\">{login}'s Repositories</h5>\n                  <button\n                    type=\"button\"\n                    className=\"close\"\n                    data-dismiss=\"modal\"\n                    aria-label=\"Close\"\n                    onClick={onClose}\n                  >\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                    {repos && repos.map((repo) => {\n                        return (<div key={repo.id}>\n                                    <a href={`${repo.html_url}`} target=\"_blank\">{repo.name}</a>\n                                    <br></br>\n                                    <a href={`${repo.description}`} target=\"_blank\">Description</a>\n                                </div>\n                                )\n                    })}\n                </div>\n                <div className=\"modal-footer\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-secondary\"\n                    data-dismiss=\"modal\"\n                    onClick={onClose}\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </>,\n        document.getElementById(\"modal-container\")\n      );\n}","import React, { useState, useEffect } from 'react';\nimport \"./App.css\";\nimport { fetchMembers, addFavorite, removeFavorite, fetchFavorites } from \"./httpRequests\";\nimport MemberProfile from './MemberProfile';\nimport Members from './Members'\nimport MemberRepos from './MemberRepos';\n\nfunction App() {\n  const [members, setMembers] = useState([]);\n  const [isMemberConfirmationShown, setIsMemberConfirmationShown] = useState(false);\n  const [isReposConfimationShown, setIsReposConfirmationShown] = useState(false);\n  const [currLogin, setCurrLogin] = useState(\"\");\n  const [favorites, setFavorites] = useState([]);\n\n  useEffect(() => {\n    fetchFavorites().then((response) => {\n        setFavorites(response);\n      });\n}, [])\n\n  function follow(login, id){\n    const member = {\n      id,\n      login\n    }\n    addFavorite(member).then((favorite) => {\n      setFavorites(favorites.concat(favorite));\n    });\n  }\n\n  function unfollow(id){\n    removeFavorite(id).then(() => {\n      const filtered_favorites = favorites.filter((favorite) => {\n        return favorite.id !== id;\n      })\n      setFavorites(filtered_favorites);\n    });\n  }\n\n  function showMemberModal(login) {\n    setIsMemberConfirmationShown(true);\n    setCurrLogin(login);\n  }\n\n  function hideMemberModal() {\n    setIsMemberConfirmationShown(false);\n  }\n\n  function showReposModal(){\n    setIsReposConfirmationShown(true);\n  }\n\n  function hideReposModal(){\n    setIsReposConfirmationShown(false);\n  }\n\n  useEffect(() => {\n    fetchMembers((data) => {\n      return Promise.all([data]);\n    }).then((memberset) => {\n      setMembers(memberset);\n    });\n  }, []);\n\n\n\n  return (\n  <>\n    \n    {members && <Members members={members} showMemberModal={showMemberModal} showReposModal={showReposModal} follow={follow} unfollow={unfollow} favorites={favorites}/>}\n    {(members && isMemberConfirmationShown && currLogin) && <MemberProfile onClose={hideMemberModal} login={currLogin} />}\n    {(isReposConfimationShown && currLogin) && <MemberRepos onClose={hideReposModal} login={currLogin} />}\n    \n  </>);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}